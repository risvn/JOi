#!/bin/bash

# ---------------- Config ----------------
laptop_ip="192.168.81.189"
port=8080
llama_url="http://$laptop_ip:$port/completion"

whisper="../stt/bin/whisper-cli"
txt_model="../stt/models/ggml-tiny.bin"
audio_file="../audio/speech.wav"

piper="../tts/piper/piper"
tts_model="../tts/voice/libritts_r/en_US-libritts_r-medium.onnx"

echo "üéôÔ∏è Pill Assistant (Client Mode - Streaming with Context) Started"

# ---------------- Context Memory ----------------
memory=""
max_exchanges=4  # number of previous Q&A to keep in context

# ---------------- Main Loop ----------------
while true; do
  echo ""
  echo "üî¥ Listening for your voice..."
  arecord -q -f S16_LE -r 16000 -c 1 -d 5 "$audio_file"

  echo "üß† Transcribing speech to text..."
  "$whisper" -m "$txt_model" -f "$audio_file" -otxt > /dev/null 2>&1
  transcript=$(cat "${audio_file}.txt")

  if [ -z "$transcript" ]; then
    echo "‚ö†Ô∏è Didn't catch that. Please speak clearly."
    continue
  fi

  echo "üìú You said: \"$transcript\""

  # Prompt setup
  system_prompt="<|system|>\nYou are a helpful assistant."
  chat_prompt="$system_prompt$memory\n<|user|>\n$transcript<|assistant|>\n"

  echo "ü§ñ Streaming response from LLaMA server..."

  # Set up FIFO for async audio streaming
  fifo="/tmp/piper_audio_fifo_$$"
  rm -f "$fifo"
  mkfifo "$fifo"

  # Start aplay on FIFO
  aplay -q -f S16_LE -r 22050 "$fifo" &
  aplay_pid=$!

  # Function to speak a chunk in background
  speak() {
    echo "$1" | "$piper" --model "$tts_model" --output-raw 2>/dev/null > "$fifo"
  }

  buffer=""
  full_response=""
  min_chunk_len=65
  sentence_endings=(". " "! " "? ")

  # Read streaming response
  curl -s "$llama_url" \
    -X POST \
    -H "Content-Type: application/json" \
    -d "$(jq -nc --arg prompt "$chat_prompt" '{"prompt": $prompt, "n_predict": 82, "stream": true}')" \
  | while IFS= read -r line; do
      json="${line#data: }"
      chunk=$(echo "$json" | jq -r '.content // empty' 2>/dev/null)

      if [[ -n "$chunk" ]]; then
        echo -n "$chunk"
        full_response+="$chunk"
        buffer+="$chunk"

        for end in "${sentence_endings[@]}"; do
          if [[ "$buffer" == *"$end" ]]; then
            speak "$buffer" &
            buffer=""
            break
          fi
        done

        if [[ ${#buffer} -ge $min_chunk_len ]]; then
          speak "$buffer" &
          buffer=""
        fi
      fi
    done

  # Speak any remaining text
  if [[ -n "$buffer" ]]; then
    speak "$buffer" &
  fi

  wait
  kill "$aplay_pid" 2>/dev/null
  rm -f "$fifo"

  echo ""

  # Update memory context
  memory+=$'\n<|user|>\n'"$transcript"$'\n<|assistant|>\n'"$full_response"

  # Trim memory to max N turns
  memory_lines=$(echo "$memory" | grep -c '^<|user|>')
  if (( memory_lines > max_exchanges )); then
    memory=$(echo "$memory" | awk -v RS='<|user|>' 'NR>1{print RS $0}' | tail -n $((max_exchanges * 4)))
  fi

  echo "üîÅ Ready for the next query."
done
